From 3e5dc1d7278504eae20427f0b5f0bcce7a4a97e5 Mon Sep 17 00:00:00 2001
From: "FeRD (Frank Dana)" <ferdnyc@gmail.com>
Date: Fri, 29 Mar 2019 08:10:31 -0400
Subject: [PATCH 1/9] Streamline libopenshot-audio discovery

---
 cmake/Modules/FindOpenShotAudio.cmake | 27 +++------------------------
 1 file changed, 3 insertions(+), 24 deletions(-)

diff --git a/cmake/Modules/FindOpenShotAudio.cmake b/cmake/Modules/FindOpenShotAudio.cmake
index 1de4529b..0aeb0e1f 100644
--- a/cmake/Modules/FindOpenShotAudio.cmake
+++ b/cmake/Modules/FindOpenShotAudio.cmake
@@ -7,31 +7,12 @@
 
 message("$ENV{LIBOPENSHOT_AUDIO_DIR}")
 
-# Find the base directory of juce includes
-find_path(LIBOPENSHOT_AUDIO_BASE_DIR JuceHeader.h
+# Find the libopenshot-audio header files
+find_path(LIBOPENSHOT_AUDIO_INCLUDE_DIR JuceHeader.h
 			PATHS $ENV{LIBOPENSHOT_AUDIO_DIR}/include/libopenshot-audio/
 			/usr/include/libopenshot-audio/
 			/usr/local/include/libopenshot-audio/ )
 
-# Get a list of all header file paths
-FILE(GLOB_RECURSE JUCE_HEADER_FILES
-  ${LIBOPENSHOT_AUDIO_BASE_DIR}/*.h
-)
-
-# Loop through each header file
-FOREACH(HEADER_PATH ${JUCE_HEADER_FILES})
-	# Get the directory of each header file
-	get_filename_component(HEADER_DIRECTORY ${HEADER_PATH}
-		PATH
-	)
-
-	# Append each directory into the HEADER_DIRECTORIES list
-	LIST(APPEND HEADER_DIRECTORIES ${HEADER_DIRECTORY})
-ENDFOREACH(HEADER_PATH)
-
-# Remove duplicates from the header directories list
-LIST(REMOVE_DUPLICATES HEADER_DIRECTORIES)
-
 # Find the libopenshot-audio.so (check env var first)
 find_library(LIBOPENSHOT_AUDIO_LIBRARY
 		NAMES libopenshot-audio openshot-audio
@@ -48,9 +29,7 @@ find_library(LIBOPENSHOT_AUDIO_LIBRARY
 set(LIBOPENSHOT_AUDIO_LIBRARIES ${LIBOPENSHOT_AUDIO_LIBRARY})
 set(LIBOPENSHOT_AUDIO_LIBRARY ${LIBOPENSHOT_AUDIO_LIBRARIES})
 
-# Seems to work fine with just the base dir (rather than all the actual include folders)
-set(LIBOPENSHOT_AUDIO_INCLUDE_DIR ${LIBOPENSHOT_AUDIO_BASE_DIR} )
-set(LIBOPENSHOT_AUDIO_INCLUDE_DIRS ${LIBOPENSHOT_AUDIO_BASE_DIR} )
+set(LIBOPENSHOT_AUDIO_INCLUDE_DIRS ${LIBOPENSHOT_AUDIO_INCLUDE_DIR} )
 
 include(FindPackageHandleStandardArgs)
 # handle the QUIETLY and REQUIRED arguments and set LIBOPENSHOT_AUDIO_FOUND to TRUE

From 7e7f5c341ac1e1bf5342eaaed72abcf8864bfb18 Mon Sep 17 00:00:00 2001
From: "FeRD (Frank Dana)" <ferdnyc@gmail.com>
Date: Fri, 29 Mar 2019 08:11:19 -0400
Subject: [PATCH 2/9] Use new Juce header file location

---
 include/AudioBufferSource.h | 2 +-
 include/AudioReaderSource.h | 2 +-
 include/AudioResampler.h    | 2 +-
 include/Clip.h              | 2 +-
 include/Frame.h             | 2 +-
 include/Settings.h          | 2 +-
 include/ZmqLogger.h         | 2 +-
 7 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/include/AudioBufferSource.h b/include/AudioBufferSource.h
index 57826f66..b1571c8d 100644
--- a/include/AudioBufferSource.h
+++ b/include/AudioBufferSource.h
@@ -37,7 +37,7 @@
 #endif
 
 #include <iomanip>
-#include "JuceLibraryCode/JuceHeader.h"
+#include "JuceHeader.h"
 
 using namespace std;
 
diff --git a/include/AudioReaderSource.h b/include/AudioReaderSource.h
index 31b17d80..3c82e7ad 100644
--- a/include/AudioReaderSource.h
+++ b/include/AudioReaderSource.h
@@ -37,7 +37,7 @@
 #endif
 
 #include <iomanip>
-#include "JuceLibraryCode/JuceHeader.h"
+#include "JuceHeader.h"
 #include "ReaderBase.h"
 
 using namespace std;
diff --git a/include/AudioResampler.h b/include/AudioResampler.h
index 412d49b1..f084329c 100644
--- a/include/AudioResampler.h
+++ b/include/AudioResampler.h
@@ -38,7 +38,7 @@
 	#define _NDEBUG
 #endif
 
-#include "JuceLibraryCode/JuceHeader.h"
+#include "JuceHeader.h"
 #include "AudioBufferSource.h"
 #include "Exceptions.h"
 
diff --git a/include/Clip.h b/include/Clip.h
index 3cd33b3a..c9b914b8 100644
--- a/include/Clip.h
+++ b/include/Clip.h
@@ -36,7 +36,7 @@
 #include <memory>
 #include <string>
 #include <QtGui/QImage>
-#include "JuceLibraryCode/JuceHeader.h"
+#include "JuceHeader.h"
 #include "AudioResampler.h"
 #include "ClipBase.h"
 #include "Color.h"
diff --git a/include/Frame.h b/include/Frame.h
index eba7f8bb..67c5ca02 100644
--- a/include/Frame.h
+++ b/include/Frame.h
@@ -56,7 +56,7 @@
 #ifdef USE_IMAGEMAGICK
 	#include "Magick++.h"
 #endif
-#include "JuceLibraryCode/JuceHeader.h"
+#include "JuceHeader.h"
 #include "ChannelLayouts.h"
 #include "AudioBufferSource.h"
 #include "AudioResampler.h"
diff --git a/include/Settings.h b/include/Settings.h
index ec26338b..0629cc4f 100644
--- a/include/Settings.h
+++ b/include/Settings.h
@@ -29,7 +29,7 @@
 #define OPENSHOT_SETTINGS_H
 
 
-#include "JuceLibraryCode/JuceHeader.h"
+#include "JuceHeader.h"
 #include <iostream>
 #include <iomanip>
 #include <fstream>
diff --git a/include/ZmqLogger.h b/include/ZmqLogger.h
index 62773e68..112b2327 100644
--- a/include/ZmqLogger.h
+++ b/include/ZmqLogger.h
@@ -29,7 +29,7 @@
 #define OPENSHOT_LOGGER_H
 
 
-#include "JuceLibraryCode/JuceHeader.h"
+#include "JuceHeader.h"
 #include <iostream>
 #include <iomanip>
 #include <fstream>

From 13ab8b48bd99c9e76fbc835a0ed592e1ce565a85 Mon Sep 17 00:00:00 2001
From: Jonathan Thomas <jonathan@openshot.org>
Date: Sat, 30 Mar 2019 01:47:49 -0500
Subject: [PATCH 3/9] Moving JuceHeader.h in ZmqLogger.h, to come after system
 libraries (to prevent error on Mac related to Point declaration)

---
 include/ZmqLogger.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/include/ZmqLogger.h b/include/ZmqLogger.h
index 112b2327..8ababac0 100644
--- a/include/ZmqLogger.h
+++ b/include/ZmqLogger.h
@@ -29,7 +29,6 @@
 #define OPENSHOT_LOGGER_H
 
 
-#include "JuceHeader.h"
 #include <iostream>
 #include <iomanip>
 #include <fstream>
@@ -40,6 +39,7 @@
 #include <time.h>
 #include <zmq.hpp>
 #include <unistd.h>
+#include "JuceHeader.h"
 
 
 using namespace std;

From 6e2600dcd4e949b8208bf9571b7d1811e84729a6 Mon Sep 17 00:00:00 2001
From: Jonathan Thomas <jonathan@openshot.org>
Date: Sat, 30 Mar 2019 14:23:50 -0500
Subject: [PATCH 4/9] Moving JuceHeader.h below other includes, to be sure it
 is always included after system libraries (for Mac Point build failure)

---
 include/AudioReaderSource.h | 2 +-
 include/AudioResampler.h    | 2 +-
 include/Clip.h              | 2 +-
 include/EffectBase.h        | 2 +-
 include/Frame.h             | 2 +-
 include/Settings.h          | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/include/AudioReaderSource.h b/include/AudioReaderSource.h
index 3c82e7ad..76c3dc7d 100644
--- a/include/AudioReaderSource.h
+++ b/include/AudioReaderSource.h
@@ -37,8 +37,8 @@
 #endif
 
 #include <iomanip>
-#include "JuceHeader.h"
 #include "ReaderBase.h"
+#include "JuceHeader.h"
 
 using namespace std;
 
diff --git a/include/AudioResampler.h b/include/AudioResampler.h
index f084329c..b81bfc3e 100644
--- a/include/AudioResampler.h
+++ b/include/AudioResampler.h
@@ -38,9 +38,9 @@
 	#define _NDEBUG
 #endif
 
-#include "JuceHeader.h"
 #include "AudioBufferSource.h"
 #include "Exceptions.h"
+#include "JuceHeader.h"
 
 namespace openshot {
 
diff --git a/include/Clip.h b/include/Clip.h
index c9b914b8..346629e4 100644
--- a/include/Clip.h
+++ b/include/Clip.h
@@ -36,7 +36,6 @@
 #include <memory>
 #include <string>
 #include <QtGui/QImage>
-#include "JuceHeader.h"
 #include "AudioResampler.h"
 #include "ClipBase.h"
 #include "Color.h"
@@ -47,6 +46,7 @@
 #include "Fraction.h"
 #include "KeyFrame.h"
 #include "ReaderBase.h"
+#include "JuceHeader.h"
 
 using namespace std;
 using namespace openshot;
diff --git a/include/EffectBase.h b/include/EffectBase.h
index 209369a8..d38e3f45 100644
--- a/include/EffectBase.h
+++ b/include/EffectBase.h
@@ -32,8 +32,8 @@
 #include <iomanip>
 #include <memory>
 #include "ClipBase.h"
-#include "Frame.h"
 #include "Json.h"
+#include "Frame.h"
 
 using namespace std;
 
diff --git a/include/Frame.h b/include/Frame.h
index 67c5ca02..66d8ccfa 100644
--- a/include/Frame.h
+++ b/include/Frame.h
@@ -56,11 +56,11 @@
 #ifdef USE_IMAGEMAGICK
 	#include "Magick++.h"
 #endif
-#include "JuceHeader.h"
 #include "ChannelLayouts.h"
 #include "AudioBufferSource.h"
 #include "AudioResampler.h"
 #include "Fraction.h"
+#include "JuceHeader.h"
 
 #pragma SWIG nowarn=362
 using namespace std;
diff --git a/include/Settings.h b/include/Settings.h
index 0629cc4f..e46f12e0 100644
--- a/include/Settings.h
+++ b/include/Settings.h
@@ -29,7 +29,6 @@
 #define OPENSHOT_SETTINGS_H
 
 
-#include "JuceHeader.h"
 #include <iostream>
 #include <iomanip>
 #include <fstream>
@@ -40,6 +39,7 @@
 #include <time.h>
 #include <zmq.hpp>
 #include <unistd.h>
+#include "JuceHeader.h"
 
 
 using namespace std;

From 76e87e6145a71f58839f7527de406669a68cbfb9 Mon Sep 17 00:00:00 2001
From: Jonathan Thomas <jonathan@openshot.org>
Date: Wed, 3 Apr 2019 23:07:47 -0500
Subject: [PATCH 5/9] Reorder x64 windows build before x86 build

---
 .gitlab-ci.yml | 58 +++++++++++++++++++++++++-------------------------
 1 file changed, 29 insertions(+), 29 deletions(-)

diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
index f8b13908..f0f868c9 100644
--- a/.gitlab-ci.yml
+++ b/.gitlab-ci.yml
@@ -56,61 +56,61 @@ mac-builder:
   tags:
     - mac
 
-windows-builder-x86:
+windows-builder-x64:
   stage: build-libopenshot
   artifacts:
     expire_in: 6 months
     paths:
-    - build\install-x86\*
+    - build\install-x64\*
   script:
-    - try { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/$CI_COMMIT_REF_NAME/download?job=windows-builder-x86" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" } catch { $_.Exception.Response.StatusCode.Value__ }
-    - if (-not (Test-Path "artifacts.zip")) { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/develop/download?job=windows-builder-x86" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" }
+    - try { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/$CI_COMMIT_REF_NAME/download?job=windows-builder-x64" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" } catch { $_.Exception.Response.StatusCode.Value__ }
+    - if (-not (Test-Path "artifacts.zip")) { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/develop/download?job=windows-builder-x64" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" }
     - Expand-Archive -Path artifacts.zip -DestinationPath .
-    - $env:LIBOPENSHOT_AUDIO_DIR = "$CI_PROJECT_DIR\build\install-x86"
-    - $env:UNITTEST_DIR = "C:\msys32\usr"
-    - $env:RESVGDIR = "C:\msys32\usr\local"
-    - $env:ZMQDIR = "C:\msys32\usr"
-    - $env:Path = "C:\msys32\mingw32\bin;C:\msys32\mingw32\lib;C:\msys32\usr\lib\cmake\UnitTest++;C:\msys32\home\jonathan\depot_tools;C:\msys32\usr;C:\msys32\usr\lib;" + $env:Path;
+    - $env:LIBOPENSHOT_AUDIO_DIR = "$CI_PROJECT_DIR\build\install-x64"
+    - $env:UNITTEST_DIR = "C:\msys64\usr"
+    - $env:ZMQDIR = "C:\msys64\usr"
+    - $env:Path = "C:\msys64\mingw64\bin;C:\msys64\mingw64\lib;C:\msys64\usr\lib\cmake\UnitTest++;C:\msys64\home\jonathan\depot_tools;C:\msys64\usr;C:\msys64\usr\lib;" + $env:Path;
     - New-Item -ItemType Directory -Force -Path build
-    - New-Item -ItemType Directory -Force -Path build\install-x86\python
+    - New-Item -ItemType Directory -Force -Path build\install-x64\python
     - cd build
-    - cmake -D"CMAKE_INSTALL_PREFIX:PATH=$CI_PROJECT_DIR\build\install-x86" -G "MinGW Makefiles" -D"CMAKE_BUILD_TYPE:STRING=Release" -D"CMAKE_CXX_FLAGS=-m32" -D"CMAKE_EXE_LINKER_FLAGS=-Wl,--large-address-aware" -D"CMAKE_C_FLAGS=-m32" ../
+    - cmake -D"CMAKE_INSTALL_PREFIX:PATH=$CI_PROJECT_DIR\build\install-x64" -G "MinGW Makefiles" -D"CMAKE_BUILD_TYPE:STRING=Release" ../
     - mingw32-make install
-    - Move-Item -Force -path "C:\msys32\mingw32\lib\python3.6\site-packages\*openshot*" -destination "install-x86\python\"
-    - cp src\libopenshot.dll install-x86\lib
-    - New-Item -path "install-x86/share/" -Name "$CI_PROJECT_NAME" -Value "CI_PROJECT_NAME:$CI_PROJECT_NAME`nCI_COMMIT_REF_NAME:$CI_COMMIT_REF_NAME`nCI_COMMIT_SHA:$CI_COMMIT_SHA`nCI_JOB_ID:$CI_JOB_ID" -ItemType file -force
+    - Move-Item -Force -path "C:\msys64\mingw64\lib\python3.6\site-packages\*openshot*" -destination "install-x64\python\"
+    - cp src\libopenshot.dll install-x64\lib
+    - New-Item -path "install-x64/share/" -Name "$CI_PROJECT_NAME" -Value "CI_PROJECT_NAME:$CI_PROJECT_NAME`nCI_COMMIT_REF_NAME:$CI_COMMIT_REF_NAME`nCI_COMMIT_SHA:$CI_COMMIT_SHA`nCI_JOB_ID:$CI_JOB_ID" -ItemType file -force
     - $PREV_GIT_LABEL=(git describe --tags --abbrev=0)
-    - git log "$PREV_GIT_LABEL..HEAD" --oneline --pretty=format:"%C(auto,yellow)%h%C(auto,magenta)% %C(auto,blue)%>(12,trunc)%ad %C(auto,green)%<(25,trunc)%aN%C(auto,reset)%s%C(auto,red)% gD% D" --date=short > "install-x86/share/$CI_PROJECT_NAME.log"
+    - git log "$PREV_GIT_LABEL..HEAD" --oneline --pretty=format:"%C(auto,yellow)%h%C(auto,magenta)% %C(auto,blue)%>(12,trunc)%ad %C(auto,green)%<(25,trunc)%aN%C(auto,reset)%s%C(auto,red)% gD% D" --date=short > "install-x64/share/$CI_PROJECT_NAME.log"
   when: always
   except:
   - tags
   tags:
     - windows
 
-windows-builder-x64:
+windows-builder-x86:
   stage: build-libopenshot
   artifacts:
     expire_in: 6 months
     paths:
-    - build\install-x64\*
+    - build\install-x86\*
   script:
-    - try { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/$CI_COMMIT_REF_NAME/download?job=windows-builder-x64" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" } catch { $_.Exception.Response.StatusCode.Value__ }
-    - if (-not (Test-Path "artifacts.zip")) { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/develop/download?job=windows-builder-x64" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" }
+    - try { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/$CI_COMMIT_REF_NAME/download?job=windows-builder-x86" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" } catch { $_.Exception.Response.StatusCode.Value__ }
+    - if (-not (Test-Path "artifacts.zip")) { Invoke-WebRequest -Uri "http://gitlab.openshot.org/OpenShot/libopenshot-audio/-/jobs/artifacts/develop/download?job=windows-builder-x86" -Headers @{"PRIVATE-TOKEN"="$ACCESS_TOKEN"} -OutFile "artifacts.zip" }
     - Expand-Archive -Path artifacts.zip -DestinationPath .
-    - $env:LIBOPENSHOT_AUDIO_DIR = "$CI_PROJECT_DIR\build\install-x64"
-    - $env:UNITTEST_DIR = "C:\msys64\usr"
-    - $env:ZMQDIR = "C:\msys64\usr"
-    - $env:Path = "C:\msys64\mingw64\bin;C:\msys64\mingw64\lib;C:\msys64\usr\lib\cmake\UnitTest++;C:\msys64\home\jonathan\depot_tools;C:\msys64\usr;C:\msys64\usr\lib;" + $env:Path;
+    - $env:LIBOPENSHOT_AUDIO_DIR = "$CI_PROJECT_DIR\build\install-x86"
+    - $env:UNITTEST_DIR = "C:\msys32\usr"
+    - $env:RESVGDIR = "C:\msys32\usr\local"
+    - $env:ZMQDIR = "C:\msys32\usr"
+    - $env:Path = "C:\msys32\mingw32\bin;C:\msys32\mingw32\lib;C:\msys32\usr\lib\cmake\UnitTest++;C:\msys32\home\jonathan\depot_tools;C:\msys32\usr;C:\msys32\usr\lib;" + $env:Path;
     - New-Item -ItemType Directory -Force -Path build
-    - New-Item -ItemType Directory -Force -Path build\install-x64\python
+    - New-Item -ItemType Directory -Force -Path build\install-x86\python
     - cd build
-    - cmake -D"CMAKE_INSTALL_PREFIX:PATH=$CI_PROJECT_DIR\build\install-x64" -G "MinGW Makefiles" -D"CMAKE_BUILD_TYPE:STRING=Release" ../
+    - cmake -D"CMAKE_INSTALL_PREFIX:PATH=$CI_PROJECT_DIR\build\install-x86" -G "MinGW Makefiles" -D"CMAKE_BUILD_TYPE:STRING=Release" -D"CMAKE_CXX_FLAGS=-m32" -D"CMAKE_EXE_LINKER_FLAGS=-Wl,--large-address-aware" -D"CMAKE_C_FLAGS=-m32" ../
     - mingw32-make install
-    - Move-Item -Force -path "C:\msys64\mingw64\lib\python3.6\site-packages\*openshot*" -destination "install-x64\python\"
-    - cp src\libopenshot.dll install-x64\lib
-    - New-Item -path "install-x64/share/" -Name "$CI_PROJECT_NAME" -Value "CI_PROJECT_NAME:$CI_PROJECT_NAME`nCI_COMMIT_REF_NAME:$CI_COMMIT_REF_NAME`nCI_COMMIT_SHA:$CI_COMMIT_SHA`nCI_JOB_ID:$CI_JOB_ID" -ItemType file -force
+    - Move-Item -Force -path "C:\msys32\mingw32\lib\python3.6\site-packages\*openshot*" -destination "install-x86\python\"
+    - cp src\libopenshot.dll install-x86\lib
+    - New-Item -path "install-x86/share/" -Name "$CI_PROJECT_NAME" -Value "CI_PROJECT_NAME:$CI_PROJECT_NAME`nCI_COMMIT_REF_NAME:$CI_COMMIT_REF_NAME`nCI_COMMIT_SHA:$CI_COMMIT_SHA`nCI_JOB_ID:$CI_JOB_ID" -ItemType file -force
     - $PREV_GIT_LABEL=(git describe --tags --abbrev=0)
-    - git log "$PREV_GIT_LABEL..HEAD" --oneline --pretty=format:"%C(auto,yellow)%h%C(auto,magenta)% %C(auto,blue)%>(12,trunc)%ad %C(auto,green)%<(25,trunc)%aN%C(auto,reset)%s%C(auto,red)% gD% D" --date=short > "install-x64/share/$CI_PROJECT_NAME.log"
+    - git log "$PREV_GIT_LABEL..HEAD" --oneline --pretty=format:"%C(auto,yellow)%h%C(auto,magenta)% %C(auto,blue)%>(12,trunc)%ad %C(auto,green)%<(25,trunc)%aN%C(auto,reset)%s%C(auto,red)% gD% D" --date=short > "install-x86/share/$CI_PROJECT_NAME.log"
   when: always
   except:
   - tags

From 9dbb063dedd3a759f11e9abd14ab4f89ffddfc40 Mon Sep 17 00:00:00 2001
From: Jonathan Thomas <jonathan@openshot.org>
Date: Thu, 4 Apr 2019 00:55:47 -0500
Subject: [PATCH 6/9] Persist any error returned by JUCE during initialise()
 method, such as sample rate issues on Windows (when playback and recording
 sample rates do not match, which breaks WASAPI)

---
 include/Qt/AudioPlaybackThread.h | 100 ++++++++++++++++---------------
 include/QtPlayer.h               |   3 +
 src/Frame.cpp                    |   8 ++-
 src/Qt/AudioPlaybackThread.cpp   |   9 ++-
 src/QtPlayer.cpp                 |  14 +++--
 5 files changed, 80 insertions(+), 54 deletions(-)

diff --git a/include/Qt/AudioPlaybackThread.h b/include/Qt/AudioPlaybackThread.h
index 68a2be3b..1d654756 100644
--- a/include/Qt/AudioPlaybackThread.h
+++ b/include/Qt/AudioPlaybackThread.h
@@ -57,12 +57,15 @@ namespace openshot
 	class AudioDeviceManagerSingleton {
 	private:
 		/// Default constructor (Don't allow user to create an instance of this singleton)
-		AudioDeviceManagerSingleton(){};
+		AudioDeviceManagerSingleton(){ initialise_error=""; };
 
 		/// Private variable to keep track of singleton instance
 		static AudioDeviceManagerSingleton * m_pInstance;
 
 	public:
+		/// Error found during JUCE initialise method
+		string initialise_error;
+
 		/// Create or get an instance of this singleton (invoke the class with this method)
 		static AudioDeviceManagerSingleton * Instance(int numChannels);
 
@@ -78,52 +81,55 @@ namespace openshot
      */
     class AudioPlaybackThread : Thread
     {
-	AudioSourcePlayer player;
-	AudioTransportSource transport;
-	MixerAudioSource mixer;
-	AudioReaderSource *source;
-	double sampleRate;
-	int numChannels;
-	WaitableEvent play;
-	WaitableEvent played;
-	int buffer_size;
-	bool is_playing;
-	SafeTimeSliceThread time_thread;
-	
-	/// Constructor
-	AudioPlaybackThread();
-	/// Destructor
-	~AudioPlaybackThread();
-
-	/// Set the current thread's reader
-	void Reader(ReaderBase *reader);
-
-	/// Get the current frame object (which is filling the buffer)
-	std::shared_ptr<Frame> getFrame();
-
-	/// Get the current frame number being played
-	int64_t getCurrentFramePosition();
-
-	/// Play the audio
-	void Play();
-
-	/// Seek the audio thread
-	void Seek(int64_t new_position);
-
-	/// Stop the audio playback
-	void Stop();
-
-	/// Start thread
-	void run();
-	
-    /// Set Speed (The speed and direction to playback a reader (1=normal, 2=fast, 3=faster, -1=rewind, etc...)
-    void setSpeed(int new_speed) { if (source) source->setSpeed(new_speed); }
-
-    /// Get Speed (The speed and direction to playback a reader (1=normal, 2=fast, 3=faster, -1=rewind, etc...)
-    int getSpeed() const { if (source) return source->getSpeed(); else return 1; }
-
-	friend class PlayerPrivate;
-	friend class QtPlayer;
+		AudioSourcePlayer player;
+		AudioTransportSource transport;
+		MixerAudioSource mixer;
+		AudioReaderSource *source;
+		double sampleRate;
+		int numChannels;
+		WaitableEvent play;
+		WaitableEvent played;
+		int buffer_size;
+		bool is_playing;
+		SafeTimeSliceThread time_thread;
+
+		/// Constructor
+		AudioPlaybackThread();
+		/// Destructor
+		~AudioPlaybackThread();
+
+		/// Set the current thread's reader
+		void Reader(ReaderBase *reader);
+
+		/// Get the current frame object (which is filling the buffer)
+		std::shared_ptr<Frame> getFrame();
+
+		/// Get the current frame number being played
+		int64_t getCurrentFramePosition();
+
+		/// Play the audio
+		void Play();
+
+		/// Seek the audio thread
+		void Seek(int64_t new_position);
+
+		/// Stop the audio playback
+		void Stop();
+
+		/// Start thread
+		void run();
+
+		/// Set Speed (The speed and direction to playback a reader (1=normal, 2=fast, 3=faster, -1=rewind, etc...)
+		void setSpeed(int new_speed) { if (source) source->setSpeed(new_speed); }
+
+		/// Get Speed (The speed and direction to playback a reader (1=normal, 2=fast, 3=faster, -1=rewind, etc...)
+		int getSpeed() const { if (source) return source->getSpeed(); else return 1; }
+
+		/// Get Audio Error (if any)
+		string getError() { return AudioDeviceManagerSingleton::Instance(numChannels)->initialise_error; }
+
+		friend class PlayerPrivate;
+		friend class QtPlayer;
     };
 
 }
diff --git a/include/QtPlayer.h b/include/QtPlayer.h
index 354bbfc8..a1a7ee0c 100644
--- a/include/QtPlayer.h
+++ b/include/QtPlayer.h
@@ -59,6 +59,9 @@ namespace openshot
 	/// Close audio device
 	void CloseAudioDevice();
 
+	/// Get Error (if any)
+	string GetError();
+
 	/// Play the video
 	void Play();
 	
diff --git a/src/Frame.cpp b/src/Frame.cpp
index a00fc232..24b653a9 100644
--- a/src/Frame.cpp
+++ b/src/Frame.cpp
@@ -953,11 +953,15 @@ void Frame::Play()
 		return;
 
 	AudioDeviceManager deviceManager;
-	deviceManager.initialise (0, /* number of input channels */
+	String error = deviceManager.initialise (0, /* number of input channels */
 	        2, /* number of output channels */
 	        0, /* no XML settings.. */
 	        true  /* select default device on failure */);
-	//deviceManager.playTestSound();
+
+	// Output error (if any)
+	if (error.isNotEmpty()) {
+		cout << "Error on initialise(): " << error.toStdString() << endl;
+	}
 
 	AudioSourcePlayer audioSourcePlayer;
 	deviceManager.addAudioCallback (&audioSourcePlayer);
diff --git a/src/Qt/AudioPlaybackThread.cpp b/src/Qt/AudioPlaybackThread.cpp
index fac2e3fc..c64bd688 100644
--- a/src/Qt/AudioPlaybackThread.cpp
+++ b/src/Qt/AudioPlaybackThread.cpp
@@ -42,11 +42,18 @@ namespace openshot
 			m_pInstance = new AudioDeviceManagerSingleton;
 
 			// Initialize audio device only 1 time
-            m_pInstance->audioDeviceManager.initialise (
+			String error = m_pInstance->audioDeviceManager.initialise (
 					0, /* number of input channels */
                     numChannels, /* number of output channels */
 					0, /* no XML settings.. */
 					true  /* select default device on failure */);
+
+			// Persist any errors detected
+			if (error.isNotEmpty()) {
+				m_pInstance->initialise_error = error.toStdString();
+			} else {
+				m_pInstance->initialise_error = "";
+			}
 		}
 
 		return m_pInstance;
diff --git a/src/QtPlayer.cpp b/src/QtPlayer.cpp
index 028a9b70..4f53c7ca 100644
--- a/src/QtPlayer.cpp
+++ b/src/QtPlayer.cpp
@@ -59,12 +59,21 @@ void QtPlayer::CloseAudioDevice()
 	AudioDeviceManagerSingleton::Instance(0)->CloseAudioDevice();
 }
 
+// Return any error string during initialization
+string QtPlayer::GetError() {
+	if (reader && threads_started) {
+		// Get error from audio thread (if any)
+		return p->audioPlayback->getError();
+	} else {
+		return "";
+	}
+}
+
 void QtPlayer::SetSource(const std::string &source)
 {
 	FFmpegReader *ffreader = new FFmpegReader(source);
 	ffreader->DisplayInfo();
 
-	//reader = new FrameMapper(ffreader, ffreader->info.fps, PULLDOWN_NONE, ffreader->info.sample_rate, ffreader->info.channels, ffreader->info.channel_layout);
 	reader = new Timeline(ffreader->info.width, ffreader->info.height, ffreader->info.fps, ffreader->info.sample_rate, ffreader->info.channels, ffreader->info.channel_layout);
 	Clip *c = new Clip(source);
 
@@ -72,9 +81,6 @@ void QtPlayer::SetSource(const std::string &source)
 	tm->AddClip(c);
 	tm->Open();
 
-//	ZmqLogger::Instance()->Path("/home/jonathan/.openshot_qt/libopenshot.log");
-//	ZmqLogger::Instance()->Enable(true);
-
     // Set the reader
 	Reader(reader);
 }

From 4c532fe1016a33c7262f565c511ac3ac1e888c7e Mon Sep 17 00:00:00 2001
From: Jonathan Thomas <jonathan@openshot.org>
Date: Thu, 4 Apr 2019 20:30:15 -0500
Subject: [PATCH 7/9] Change travis ci to use xenial dist (instead of trusty)

---
 .travis.yml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.travis.yml b/.travis.yml
index fa191b2b..6954814f 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,4 +1,4 @@
-dist: trusty
+dist: xenial
 
 matrix:
   include:

From 6fb49710a3056e228722c9a4215f2179c8f5377a Mon Sep 17 00:00:00 2001
From: Jonathan Thomas <jonathan@openshot.org>
Date: Thu, 4 Apr 2019 20:33:58 -0500
Subject: [PATCH 8/9] Requiring sudo for Travis ci

---
 .travis.yml | 1 +
 1 file changed, 1 insertion(+)

diff --git a/.travis.yml b/.travis.yml
index 6954814f..06d0a39e 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,4 +1,5 @@
 dist: xenial
+sudo: required
 
 matrix:
   include:

From 85a10291f61d6956028bc170c50b6a2c6dfd714f Mon Sep 17 00:00:00 2001
From: Jonathan Thomas <jonathan@openshot.org>
Date: Thu, 4 Apr 2019 20:38:39 -0500
Subject: [PATCH 9/9] Updating Qt apt repository for xenial

---
 .travis.yml | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/.travis.yml b/.travis.yml
index 06d0a39e..879a8190 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -7,7 +7,7 @@ matrix:
       name: "FFmpeg 2"
       before_script:
       - sudo add-apt-repository ppa:openshot.developers/libopenshot-daily -y
-      - sudo add-apt-repository ppa:beineri/opt-qt58-trusty -y
+      - sudo add-apt-repository ppa:beineri/opt-qt-5.10.0-xenial -y
       - sudo apt-get update -qq
       - sudo apt-get install gcc-4.8 cmake libavcodec-dev libavformat-dev libswscale-dev libavresample-dev libavutil-dev libopenshot-audio-dev libopenshot-dev libfdk-aac-dev libfdk-aac-dev libjsoncpp-dev libmagick++-dev libopenshot-audio-dev libunittest++-dev libzmq3-dev pkg-config python3-dev qtbase5-dev qtmultimedia5-dev swig -y
       - sudo apt autoremove -y
@@ -21,7 +21,7 @@ matrix:
       name: "FFmpeg 3"
       before_script:
       - sudo add-apt-repository ppa:openshot.developers/libopenshot-daily -y
-      - sudo add-apt-repository ppa:beineri/opt-qt58-trusty -y
+      - sudo add-apt-repository ppa:beineri/opt-qt-5.10.0-xenial -y
       - sudo add-apt-repository ppa:jonathonf/ffmpeg-3 -y
       - sudo apt-get update -qq
       - sudo apt-get install gcc-4.8 cmake libavcodec-dev libavformat-dev libswscale-dev libavresample-dev libavutil-dev libopenshot-audio-dev libopenshot-dev libfdk-aac-dev libfdk-aac-dev libjsoncpp-dev libmagick++-dev libopenshot-audio-dev libunittest++-dev libzmq3-dev pkg-config python3-dev qtbase5-dev qtmultimedia5-dev swig -y
@@ -36,7 +36,7 @@ matrix:
       name: "FFmpeg 4"
       before_script:
       - sudo add-apt-repository ppa:openshot.developers/libopenshot-daily -y
-      - sudo add-apt-repository ppa:beineri/opt-qt58-trusty -y
+      - sudo add-apt-repository ppa:beineri/opt-qt-5.10.0-xenial -y
       - sudo add-apt-repository ppa:jonathonf/ffmpeg -y
       - sudo add-apt-repository ppa:jonathonf/ffmpeg-4 -y
       - sudo add-apt-repository ppa:jonathonf/backports -y
